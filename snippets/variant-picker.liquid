{%- comment -%}
----------------------------------------------------------------------------------------------------------------------
VARIANT PICKER
----------------------------------------------------------------------------------------------------------------------

Render the variant picker option selectors with "M" size selected by default
{%- endcomment -%}

{%- assign color_label_list = 'general.label.color' | t | replace: ', ', ',' | downcase | split: ',' -%}
{%- assign size_label_list = 'general.label.size' | t | replace: ', ', ',' | downcase | split: ',' -%}

{% unless template.suffix == "bundle-template" or template.suffix == "personalised-bundles-template" %}
  <variant-picker class="variant-picker v-stack gap-4" handle="{{ product.handle }}" form="{{ form_id }}" {% if template.suffix == "bundle-template" %} style="display:none" {% endif %} {% if update_url %}update-url{% endif %} {% if hide_sold_out_variants %}hide-sold-out-variants{% endif %}> 
    {%- for option in product.options_with_values -%}
      {% liquid
        assign option_downcase = option.name | downcase
        assign option_selector_type = selector_type

        if color_label_list contains option_downcase
          assign option_selector_type = color_selector_type

          if option_selector_type == 'variant_image'
            # To use this mode every variant must have an attached media
            for variant in product.variants
              unless variant.featured_media
                assign option_selector_type = 'color'
                break
              endunless
            endfor
          endif
        endif
      %}

      {% capture field_set %}
        <fieldset class="variant-picker__option v-stack gap-4 no-js:hidden variant-picker__option-{{option.name}}">
        
        {%- if option_selector_type == 'color' %}
          <div class="h-stack gap-1">
            <legend class="Barlow-Medium letter-spacing-md">Colourway:</legend>
          </div>
        {% endif %}
        
        {%- if size_chart_page != blank and size_label_list contains option_downcase -%}
          {%- capture id -%}size-chart-{{ section.id }}-{{ block.id }}{%- endcapture -%}
          <div>
            <button type="button" class="Barlow-Medium dfs-12 mfs-12" aria-controls="{{ id | escape }}" aria-expanded="false" style="text-wrap: nowrap;">
              <span class="link" style="text-wrap: nowrap; white-space: pre;">{{- 'product.general.size_chart' | t -}}</span>
            </button>

            <x-modal id="{{ id | escape }}" class="modal modal--lg">
              <span class="dfs-30 mfs-30 Barlow-Medium letter-spacing-sm" slot="header">{{ size_chart_page.title }}</span>
              <div class="prose">
                {{- size_chart_page.content -}}
                <div style="text-align: center;padding-top:10px">
                  <a class="custom_button_chart" href="https://ezydog.com.au/pages/size-guide" target="_blank">How to measure your dog</a>
                </div>
              </div>
            </x-modal>
          </div>
        {%- endif -%}
     
        {%- assign name = 'option' | append: option.position -%}

        {%- if option_selector_type == 'dropdown' -%}
          <div class="relative">
            {%- capture popover_id -%}popover-variant-dropdown-{{ section.id }}-{{ product.id }}-{{ option.position }}{%- endcapture -%}

            <button type="button" class="select" aria-controls="{{ popover_id }}" aria-expanded="false">
              <span id="{{ popover_id }}-selected-value">
                {%- if option.name == 'Size' and option.values contains 'M' -%}
                  M
                {%- else -%}
                  {{- option.selected_value -}}
                {%- endif -%}
              </span>
              {%- render 'icon' with 'dropdown-chevron' -%}
            </button>

            <x-popover id="{{ popover_id }}" class="popover popover--bottom-start" close-on-listbox-select initial-focus="[aria-selected='true']">
              <p class="h5" slot="header">{{ option.name }}</p>

              <x-listbox data-option-selector class="popover__value-list" aria-owns="{{ popover_id }}-selected-value">
                <input type="hidden" id="{{ popover_id }}-input" name="option{{ option.position }}" form="{{ form_id }}" value="{% if option.name == 'Size' and option.values contains 'M' %}M{% else %}{{ option.selected_value | escape }}{% endif %}">

                {%- for value in option.values -%}
                  <button 
                    type="button" 
                    class="h-stack justify-between gap-2" 
                    role="option" 
                    value="{{ value | escape }}" 
                    title="{{ value | escape }}" 
                    aria-selected="{% if option.name == 'Size' and value == 'M' %}true{% elsif value == option.selected_value %}true{% else %}false{% endif %}" 
                    data-option-value
                  >
                    <span>{{- value -}}</span>
                    <span class="variant-picker__dropdown-sold-out-label">{{- 'product.general.sold_out_badge' | t -}}</span>
                  </button>
                {%- endfor -%}
              </x-listbox>
            </x-popover>
          </div>
        {%- else -%}
          {%- liquid
            case option_selector_type
              when 'color' or 'variant' or 'block' or 'block_swatch'
                assign list_classes = 'h-stack gap-2.5 wrap'
              else
                assign list_classes = ''
            endcase
          -%}

          <div data-option-selector class="variant-picker__option-values {{ list_classes }}">
            {%- for value in option.values -%}
              {% liquid
                assign selected = false
                if option.name == 'Size' and value == 'M'
                  assign selected = true
                elsif value == option.selected_value
                  assign selected = true
                endif

                case option_selector_type
                  when 'variant'
                    assign variant_for_value = product.variants | where: name, value | first
                    render 'swatch' with 'media', value: value, media: variant_for_value.featured_media, selected: selected, name: name, form: form_id
                  when 'color'
                    render 'swatch' with 'color', value: value, selected: selected, name: name, form: form_id
                  when 'block'
                    render 'swatch' with 'block', value: value, selected: selected, name: name, form: form_id
                  when 'block_swatch'
                    render 'swatch' with 'block', value: value, selected: selected, name: name, form: form_id, show_color: true
                endcase
              %}
            {%- endfor -%}
          </div>
        {%- endif -%}
        </fieldset>
      {% endcapture %}

      {% if option_downcase == 'size' %}
        <div class="v-stack gap-1">
          <span class="hidden-tablet-and-up mfs-16 Barlow">Available in</span>
          {{ field_set }}
        </div>
      {% else %}
        {{ field_set }}
      {% endif %}
    {%- endfor -%}

    <noscript>
      {%- assign input_label = 'product.general.variant' | t -%}
      {%- capture select_options -%}
        {%- for variant in product.variants -%}
          <option {% if variant == product.selected_or_first_available_variant %}selected="selected"{% endif %} {% unless variant.available %}disabled="disabled"{% endunless %} value="{{ variant.id }}">{{ variant.title }} - {{ variant.price | money }}</option>
        {%- endfor -%}
      {%- endcapture -%}
      {%- render 'select', label: input_label, form: form_id, name: 'id', options: select_options -%}
    </noscript>
  </variant-picker>
{%- else -%}
  <div class="hide hidden">
    {%- assign input_label = 'product.general.variant' | t -%}
    {%- capture select_options -%}
      {%- for variant in product.variants -%}
        <option {% if variant == product.selected_or_first_available_variant %}selected="selected"{% endif %} {% unless variant.available %}disabled="disabled"{% endunless %} data-price="{{ variant.price | money }}" data-compare="{{ variant.compare_at_price | money }}" data-option="{{ variant.options[0] }}" value="{{ variant.id }}">{{ variant.title }} - {{ variant.price | money }}</option>
      {%- endfor -%}
    {%- endcapture -%}
    {%- render 'select', label: input_label, form: form_id, name: 'id', options: select_options -%}
  </div>
{%- endunless -%}

<style>
  
  .custom_button_chart {
    background: #ED1C24 !important;
    color: #ffffff;
    text-decoration: none;
    display: inline-block;
    padding: 5px 15px;
    font-size: 16px;
    cursor: pointer;
    border-radius: 4px;
    border: none;
    font-family: 'Barlow Semi Condensed', sans-serif;
    font-weight: 700;
    text-transform: uppercase;
  }
  
  .custom_button_chart:hover {
    color:#ED1C24 !important; 
    background: transparent !important;
    border:1px solid #ED1C24 !important;
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    
    function setDefaultSizeM() {
      // Try different selectors for maximum compatibility
      const selectors = [
        'variant-picker select[name="size"]',
        'select[name="size"]',
        'select[id="Size"]',
        'input[name="size"][value="M"]',
        'input[name^="option"][value="M"]',
        '[data-option-index="0"] input[value="M"]'
      ];
      
      let found = false;
      
      // Try each selector until we find a match
      for (const selector of selectors) {
        const elements = document.querySelectorAll(selector);
        
        if (elements.length) {
          elements.forEach(element => {
            if (element.tagName === 'SELECT') {
              if (element.querySelector('option[value="M"]')) {
                element.value = 'M';
                found = true;
                const event = new Event('change', { bubbles: true });
                element.dispatchEvent(event);
              }
            } else if (element.tagName === 'INPUT') {
              element.checked = true;
              found = true;
              const event = new Event('change', { bubbles: true });
              element.dispatchEvent(event);
            }
          });
          
          if (found) break;
        }
      }
      
      return found;
    }
    
    // First attempt to set "M"
    if (!setDefaultSizeM()) {
      const observer = new MutationObserver(function() {
        if (setDefaultSizeM()) {
          observer.disconnect();
        }
      });
      
      observer.observe(document.body, {
        childList: true,
        subtree: true,
        attributes: true
      });
      
      setTimeout(() => {
        setDefaultSizeM();
        observer.disconnect();
      }, 3000);
    }
    
    window.addEventListener('load', setDefaultSizeM);
  });
</script>