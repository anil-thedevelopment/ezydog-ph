{% doc %}
  @prompt
    collapsible sections or tabs that contains information in it, with 3 customizable buttons that merchants can add and update from the customize section, only shown if not empty
{% enddoc %}
{% assign gen_id = block.id | replace: '_', '' | downcase %}

{% style %}
  .collapsible-container-{{ gen_id }} {
    background-color: {{ block.settings.background_color }};
    border-radius: {{ block.settings.border_radius }}px;
    overflow: hidden;
    border: 1px solid {{ block.settings.border_color }};
  }

  .collapsible-item-{{ gen_id }} {
    border-bottom: 1px solid {{ block.settings.border_color }};
  }

  .collapsible-item-{{ gen_id }}:last-child {
    border-bottom: none;
  }

  .collapsible-header-{{ gen_id }} {
    width: 100%;
    padding: {{ block.settings.padding }}px;
    background: none;
    border: none;
    text-align: left;
    cursor: pointer;
    display: flex;
    justify-content: space-between;
    align-items: center;
    font-size: {{ block.settings.header_font_size }}px;
    font-weight: {{ block.settings.header_font_weight }};
    color: {{ block.settings.header_text_color }};
    transition: background-color 0.3s ease;
  }

  .collapsible-header-{{ gen_id }}:hover {
    background-color: {{ block.settings.header_hover_color }};
  }

  .collapsible-header-{{ gen_id }}:focus {
    outline: 2px solid {{ block.settings.focus_color }};
    outline-offset: -2px;
  }

  .collapsible-icon-{{ gen_id }} {
    width: 20px;
    height: 20px;
    transition: transform 0.3s ease;
    color: {{ block.settings.icon_color }};
    flex-shrink: 0;
  }

  .collapsible-header-{{ gen_id }}[aria-expanded="true"] .collapsible-icon-{{ gen_id }} {
    transform: rotate(180deg);
  }

  .collapsible-content-{{ gen_id }} {
    max-height: 0;
    overflow: hidden;
    transition: max-height 0.3s ease;
  }

  .collapsible-content-{{ gen_id }}.active {
    max-height: 1000px;
  }

  .collapsible-content-inner-{{ gen_id }} {
    padding: 0 {{ block.settings.padding }}px {{ block.settings.padding }}px;
    color: {{ block.settings.content_text_color }};
    font-size: {{ block.settings.content_font_size }}px;
    line-height: 1.6;
  }

  .collapsible-content-inner-{{ gen_id }} p {
    margin: 0 0 16px;
  }

  .collapsible-content-inner-{{ gen_id }} p:last-child {
    margin-bottom: 0;
  }

  .collapsible-content-inner-{{ gen_id }} ul,
  .collapsible-content-inner-{{ gen_id }} ol {
    margin: 0 0 16px;
    padding-left: 20px;
  }

  .collapsible-content-inner-{{ gen_id }} li {
    margin-bottom: 8px;
  }

  .collapsible-empty-state-{{ gen_id }} {
    padding: 40px {{ block.settings.padding }}px;
    text-align: center;
    color: #999;
    font-style: italic;
  }

  .collapsible-buttons-{{ gen_id }} {
    padding: {{ block.settings.padding }}px;
    display: flex;
    gap: 10px;
    flex-wrap: wrap;
    justify-content: center;
  }

  .collapsible-button-{{ gen_id }} {
    padding: 10px 20px;
    font-size: {{ block.settings.button_font_size }}px;
    font-weight: {{ block.settings.button_font_weight }};
    color: {{ block.settings.button_text_color }};
    background-color: {{ block.settings.button_background_color }};
    border: 1px solid {{ block.settings.button_border_color }};
    border-radius: {{ block.settings.button_border_radius }}px;
    text-decoration: none;
    transition: background-color 0.3s ease, color 0.3s ease;
  }

  .collapsible-button-{{ gen_id }}:hover {
    background-color: {{ block.settings.button_hover_background_color }};
    color: {{ block.settings.button_hover_text_color }};
  }

  .collapsible-button-{{ gen_id }}:focus {
    outline: 2px solid {{ block.settings.focus_color }};
    outline-offset: 2px;
  }
{% endstyle %}

<div class="breadcrumb-wrapper" style="margin: 35px 15px;">
  {% render 'breadcrumbs', floating: false %}
</div>
<div class="text-mb-lg" style="margin-left: 15px;">
  {% if block.settings.subheading != blank or block.settings.title != blank or block.settings.content != blank %}
    <div class="collapsible-header-section-{{ gen_id }}">
      {% if block.settings.subheading != blank %}
        <div class="subheading">{{ block.settings.subheading }}</div>
      {% endif %}
      {% if block.settings.title != blank %}
        <h2 class="heading">{{ block.settings.title }}</h2>
      {% endif %}
      {% if block.settings.content != blank %}
        <div class="content">{{ block.settings.content }}</div>
      {% endif %}
    </div>
  {% endif %}
</div>
<collapsible-sections-{{ gen_id }}
  class="collapsible-container-{{ gen_id }}"
  {{ block.shopify_attributes }}
>
  {% assign has_content = false %}
  
  {% for i in (1..5) %}
    {% liquid
      assign title_key = 'section_' | append: i | append: '_title'
      assign content_key = 'section_' | append: i | append: '_content'
      assign title = block.settings[title_key]
      assign content = block.settings[content_key]
    %}
    
    {% if title != blank and content != blank %}
      {% assign has_content = true %}
      <div class="collapsible-item-{{ gen_id }}">
        <button
          class="collapsible-header-{{ gen_id }}"
          aria-expanded="{% if forloop.first and block.settings.first_section_open %}true{% else %}false{% endif %}"
          aria-controls="collapsible-content-{{ gen_id }}-{{ i }}"
          data-section="{{ i }}"
        >
          <span>{{ title }}</span>
          <svg
            class="collapsible-icon-{{ gen_id }}"
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
            stroke-linecap="round"
            stroke-linejoin="round"
          >
            <polyline points="6,9 12,15 18,9"></polyline>
          </svg>
        </button>
        <div
          class="collapsible-content-{{ gen_id }}{% if forloop.first and block.settings.first_section_open %} active{% endif %}"
          id="collapsible-content-{{ gen_id }}-{{ i }}"
        >
          <div class="collapsible-content-inner-{{ gen_id }}">
            {{ content }}
          </div>
        </div>
      </div>
    {% endif %}
  {% endfor %}

  {% unless has_content %}
    <div class="collapsible-empty-state-{{ gen_id }}">
      Add titles and content to create collapsible sections
    </div>
  {% endunless %}

  {% assign has_buttons = false %}
  {% for i in (1..3) %}
    {% liquid
      assign button_text_key = 'button_' | append: i | append: '_text'
      assign button_url_key = 'button_' | append: i | append: '_url'
      assign button_text = block.settings[button_text_key]
      assign button_url = block.settings[button_url_key]
      if button_text != blank and button_url != blank
        assign has_buttons = true
      endif
    %}
  {% endfor %}

  {% if has_buttons %}
    <div class="collapsible-buttons-{{ gen_id }}">
      {% for i in (1..3) %}
        {% liquid
          assign button_text_key = 'button_' | append: i | append: '_text'
          assign button_url_key = 'button_' | append: i | append: '_url'
          assign button_text = block.settings[button_text_key]
          assign button_url = block.settings[button_url_key]
        %}
        {% if button_text != blank and button_url != blank %}
          <a href="{{ button_url }}" class="collapsible-button-{{ gen_id }}">{{ button_text }}</a>
        {% endif %}
      {% endfor %}
    </div>
  {% endif %}
</collapsible-sections-{{ gen_id }}>


<script>
  (function() {
    class CollapsibleSections{{ gen_id }} extends HTMLElement {
      constructor() {
        super();
      }

      connectedCallback() {
        this.headers = this.querySelectorAll('.collapsible-header-{{ gen_id }}');
        this.setupEventListeners();
      }

      setupEventListeners() {
        this.headers.forEach((header) => {
          header.addEventListener('click', () => {
            const isExpanded = header.getAttribute('aria-expanded') === 'true';
            const content = header.nextElementSibling;
            
            if ({{ block.settings.allow_multiple | json }}) {
              this.toggleSection(header, content, !isExpanded);
            } else {
              this.headers.forEach((otherHeader) => {
                const otherContent = otherHeader.nextElementSibling;
                if (otherHeader === header) {
                  this.toggleSection(otherHeader, otherContent, !isExpanded);
                } else {
                  this.toggleSection(otherHeader, otherContent, false);
                }
              });
            }
          });
        });
      }

      toggleSection(header, content, expand) {
        header.setAttribute('aria-expanded', expand);
        if (expand) {
          content.classList.add('active');
        } else {
          content.classList.remove('active');
        }
      }
    }

    customElements.define('collapsible-sections-{{ gen_id }}', CollapsibleSections{{ gen_id }});
  })();
</script>

{% schema %}
{
  "name": "Collapsible sections",
  "settings": [
    {
      "type": "header",
      "content": "Behavior"
    },
    {
      "type": "checkbox",
      "id": "allow_multiple",
      "label": "Allow multiple sections open",
      "default": false
    },
    {
      "type": "checkbox",
      "id": "first_section_open",
      "label": "Open first section by default",
      "default": true
    },
    {
      "type": "header",
      "content": "Style"
    },
    {
      "type": "color",
      "id": "background_color",
      "label": "Background color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "border_color",
      "label": "Border color",
      "default": "#e0e0e0"
    },
    {
      "type": "color",
      "id": "header_text_color",
      "label": "Header text color",
      "default": "#1c1c1c"
    },
    {
      "type": "color",
      "id": "header_hover_color",
      "label": "Header hover color",
      "default": "#f5f5f5"
    },
    {
      "type": "color",
      "id": "content_text_color",
      "label": "Content text color",
      "default": "#666666"
    },
    {
      "type": "color",
      "id": "icon_color",
      "label": "Icon color",
      "default": "#1c1c1c"
    },
    {
      "type": "color",
      "id": "focus_color",
      "label": "Focus outline color",
      "default": "#005fcc"
    },
    {
      "type": "color",
      "id": "button_text_color",
      "label": "Button text color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "button_background_color",
      "label": "Button background color",
      "default": "#1c1c1c"
    },
    {
      "type": "color",
      "id": "button_border_color",
      "label": "Button border color",
      "default": "#1c1c1c"
    },
    {
      "type": "color",
      "id": "button_hover_text_color",
      "label": "Button hover text color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "button_hover_background_color",
      "label": "Button hover background color",
      "default": "#333333"
    },
    {
      "type": "range",
      "id": "border_radius",
      "min": 0,
      "max": 20,
      "step": 2,
      "unit": "px",
      "label": "Border radius",
      "default": 8
    },
    {
      "type": "range",
      "id": "padding",
      "min": 10,
      "max": 40,
      "step": 2,
      "unit": "px",
      "label": "Padding",
      "default": 20
    },
    {
      "type": "range",
      "id": "button_border_radius",
      "min": 0,
      "max": 20,
      "step": 2,
      "unit": "px",
      "label": "Button border radius",
      "default": 4
    },
    {
      "type": "header",
      "content": "Typography"
    },
    {
      "type": "range",
      "id": "header_font_size",
      "min": 14,
      "max": 24,
      "step": 1,
      "unit": "px",
      "label": "Header font size",
      "default": 18
    },
    {
      "type": "select",
      "id": "header_font_weight",
      "label": "Header font weight",
      "options": [
        {
          "value": "400",
          "label": "Normal"
        },
        {
          "value": "500",
          "label": "Medium"
        },
        {
          "value": "600",
          "label": "Semi-bold"
        },
        {
          "value": "700",
          "label": "Bold"
        }
      ],
      "default": "600"
    },
    {
      "type": "range",
      "id": "content_font_size",
      "min": 12,
      "max": 20,
      "step": 1,
      "unit": "px",
      "label": "Content font size",
      "default": 16
    },
    {
      "type": "range",
      "id": "button_font_size",
      "min": 12,
      "max": 20,
      "step": 1,
      "unit": "px",
      "label": "Button font size",
      "default": 14
    },
    {
      "type": "select",
      "id": "button_font_weight",
      "label": "Button font weight",
      "options": [
        {
          "value": "400",
          "label": "Normal"
        },
        {
          "value": "500",
          "label": "Medium"
        },
        {
          "value": "600",
          "label": "Semi-bold"
        },
        {
          "value": "700",
          "label": "Bold"
        }
      ],
      "default": "500"
    },
    {
      "type": "header",
      "content": "Section 1"
    },
    {
      "type": "inline_richtext",
      "id": "subheading",
      "label": "t:global.text.subheading",
      "default": "Subheading"
    },
    {
      "type": "inline_richtext",
      "id": "title",
      "label": "t:global.text.heading",
      "default": "Returns & Refunds Policy"
    },
    {
      "type": "richtext",
      "id": "content",
      "label": "t:global.text.content"
    },
    {
      "type": "text",
      "id": "section_1_title",
      "label": "Title",
      "default": "Shipping Information"
    },
    {
      "type": "richtext",
      "id": "section_1_content",
      "label": "Content",
      "default": "<p>We offer free shipping on orders over $50. Standard shipping takes 3-5 business days, while express shipping takes 1-2 business days.</p>"
    },
    {
      "type": "header",
      "content": "Section 2"
    },
    {
      "type": "text",
      "id": "section_2_title",
      "label": "Title",
      "default": "Return Policy"
    },
    {
      "type": "richtext",
      "id": "section_2_content",
      "label": "Content",
      "default": "<p>Items can be returned within 30 days of purchase. Products must be in original condition with tags attached.</p>"
    },
    {
      "type": "header",
      "content": "Section 3"
    },
    {
      "type": "text",
      "id": "section_3_title",
      "label": "Title",
      "default": "Size Guide"
    },
    {
      "type": "richtext",
      "id": "section_3_content",
      "label": "Content",
      "default": "<p>Please refer to our size chart for accurate measurements. If you're between sizes, we recommend sizing up for a comfortable fit.</p>"
    },
    {
      "type": "header",
      "content": "Section 4"
    },
    {
      "type": "text",
      "id": "section_4_title",
      "label": "Title"
    },
    {
      "type": "richtext",
      "id": "section_4_content",
      "label": "Content"
    },
    {
      "type": "header",
      "content": "Section 5"
    },
    {
      "type": "text",
      "id": "section_5_title",
      "label": "Title"
    },
    {
      "type": "richtext",
      "id": "section_5_content",
      "label": "Content"
    },
    {
      "type": "header",
      "content": "Button 1"
    },
    {
      "type": "text",
      "id": "button_1_text",
      "label": "Button text",
      "default": "Shop Now"
    },
    {
      "type": "url",
      "id": "button_1_url",
      "label": "Button URL",
      "default": "/collections/all"
    },
    {
      "type": "header",
      "content": "Button 2"
    },
    {
      "type": "text",
      "id": "button_2_text",
      "label": "Button text",
      "default": "Contact Us"
    },
    {
      "type": "url",
      "id": "button_2_url",
      "label": "Button URL",
      "default": "/"
    },
    {
      "type": "header",
      "content": "Button 3"
    },
    {
      "type": "text",
      "id": "button_3_text",
      "label": "Button text"
    },
    {
      "type": "url",
      "id": "button_3_url",
      "label": "Button URL"
    }
  ],
  "presets": [
    {
      "name": "Collapsible sections"
    }
  ],
  "tag": null
}
{% endschema %}