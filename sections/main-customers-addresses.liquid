{% comment %} {% paginate customer.addresses by 5 %} {% endpaginate %}{% endcomment %}
 <link
     rel="stylesheet"
     href="https://cdnjs.cloudflare.com/ajax/libs/intl-tel-input/17.0.8/css/intlTelInput.css"
   />
   <script src="https://cdnjs.cloudflare.com/ajax/libs/intl-tel-input/17.0.8/js/intlTelInput.min.js"></script>
  
  <!-- New Changes - 06/06/2025  
  <div class="content-block-banner">
    <div>
      <h2 class="content-title">My Profile</h2>
      <p class="banner-image-container" style="text-align: end;">
        <img src="https://cdn.shopify.com/s/files/1/0556/0051/3212/files/NEW_DOG.png?v=1749458854" class="banner-image" style="vertical-align: middle;">
      </p>
    </div>
  </div>
  -->
  <style>
      #MainContent {
        background: #ffffff;
        margin-top: 10px;
      }
    .content-block-banner{
      border: 1px solid #f9f7f7;
      background-color: #f0f0f0;
      margin-top: 6px;
      margin-bottom: 0px;
    }
    .content-title {
      position: relative;
      font-size: 24px;
      text-transform: uppercase;
      font-weight: 600;
    }
    .container p b {
      text-transform: uppercase;
    }
    .banner-image {
      height: 100px;
    }
    .page-content-width p.banner-image-container {
      margin-right: 7em;
    }
    img.banner-image {
      /* position: absolute;
      top: 5em;
      margin-left: calc(90% - 340px); */
      right: 120px;
    }
    .page-content-width {
      max-width: 1180px;
      margin: 0 auto;
    }
    h4 {
      font-size: 1.125em;
      letter-spacing: 1.2px;
      text-transform: uppercase;
      font-weight: 700;
      font-style: normal;
    }
    input {
      padding: 13px 15px;
      background-color: #f4f4f4;
      color: #333;
      border: 0;
      max-width: 100%;
    }
    .content-block-banner div {
      display: flex;
      justify-content: space-between;
      max-width: 1180px;
      margin: 0 auto;
      align-items: center;
    }
    .content-block-banner {
      margin-bottom: 30px;
    }
    @media only screen and (max-width: 767px){
      .content-title {
        margin-left: 10px;
      }
     }
    @media only screen and (max-width: 767px){
      .page-content-width p.banner-image-container {
        margin-left: calc(100% - 165px);
      }
      img.banner-image {
        top: 4em !important;
        margin-left: 40px;
      }
      .content-title {
        margin-left: 10px;
      }
      .page-content-width {
        margin: 0 10px;
        padding: 0 20px;
      }
    }
    @media only screen and (min-width: 768px) and (max-width: 1024px){
      img.banner-image {
        top: 5.75em;
        margin-left: 38em;
      }
      .popup-update-contact {
        width: 84%;
      }
      .popup {
        width: 88%;
        top: calc(73% - 564px);
      }
    }
    @media only screen and (min-width: 1024px) and (max-width: 1366px) {
      img.banner-image {
          top: 4.75em;
          margin-left: 53em; 
      }
      .popup-update-contact {
          width: 55%;
          left: calc(40% - 187px);
          top: calc(50% - 436px);
      }
      .popup {
          width: 70%;
          left: calc(35% - 190px);
          top: calc(50% - 499px);
      }
    }
  </style>
    
<div class="page-content-width">
  <div class="container" style="margin-bottom: 12px; margin-left: 0;">
    <p style="display: inline-flex; align-items: center; gap: 5px; margin: 0;">
      <b style="font-size: 20px;">My Details</b>
      <img src="https://cdn.shopify.com/s/files/1/0556/0051/3212/files/info-no_bg.png?v=1742201672" height="17" width="17" class="details-icon" alt="info" style="display: inline-block;">
    </p>

    <div class="details">
        <img src="https://cdn.shopify.com/s/files/1/0556/0051/3212/files/info-no_bg.png?v=1742201672" height="17px" width="17px" class="details-icon" style="vertical-align: middle;">
        <div class="text-content" bis_skin_checked="1">
          <p style="font-size: 15px;font-weight: 600;">Setting up your Details</p>
          <p>Make checking out and re-ordering your favourite product faster and easier by having all your details in one place.</p>
          <p>Need extra guidance, you can get in touch with our friendly customer service team via our online chat, or by booking a consult <a href="https://ezydog.com.au/pages/consultation">here</a>.</p>
        </div>
    </div>
  </div>
  
  <style>
    @media screen and (min-width: 768px) {
      .details {
        width: 40%;
        margin-left: 25px;
      }
    }
    .details {
      display: none;
      font-size: 12px;
      text-align: justify;
      border: 1px solid #d7d6d6;
      background: #f0f0f0;
      padding: 10px;
      border-radius: 10px;
      position: absolute;
      top: 30px;
      left: 0;
    }
    .details .text-content {
      padding: 1em 2em;
    }
    .container {
      position: relative;
    }
    .details a {
      color: #f01515;
    }
    .details, .text-content {
      font-family: 'Barlow', 'Atlassian Sans';
      color: #231f20;
    }
    .user-info-display p label {
      text-transform: uppercase;
      font-size: 12px;
    }
    .customer-address-billing p,
    .customer-address-shipping p {
      font-weight: 600;
      margin: 0;
      font-size: 14px;
    }
  </style>
  
  <script>
    const detailsIcon = document.querySelector(".details-icon");
    const detailsDiv = document.querySelector(".details");
  
    detailsIcon.addEventListener("click", () => {
      // Toggle visibility
      if (detailsDiv.style.display === "block") {
        detailsDiv.style.display = "none";
      } else {
        detailsDiv.style.display = "block";
      }
    });
  
    // Optional: Hide details if clicked outside
    document.addEventListener("click", (event) => {
      if (!detailsDiv.contains(event.target) && !detailsIcon.contains(event.target)) {
        detailsDiv.style.display = "none";
      }
    });
  </script>

  <div class="grid">
    <div class="grid__item medium-up--two-thirds">

      <!-- Customer Details -->
      <div class="personal-details">
          <h4 style="text-transform: uppercase;">Contact Information</h4>
      
          <div class="user-info-display">
              <p><label>Name</label></p>
              <p>{{ customer.name }}</p>
              <p><label>Email</label></p>
              <p>{{ customer.email }}</p>
              <p><label>Phone</label></p>
              <p>{% if customer.phone %}{{ customer.phone }}{% endif %}</p>
          </div>
        <p class="text-right"><button type="button" class="edit-user-info" style="text-transform: uppercase;">Edit Details</button></p>
        
          <div class="popup-container-contact hide">
            <div class="popup-overlay-contact"></div>
            <div class="popup-update-contact"> 
              <div class="customer-update-form" style="display: none;">
                  <h4>Update Your Name</h4>
                  <form id="customerUpdateForm">
                      <div class="user-name">
                          <label for="firstName">First Name</label>
                          <input type="text" placeholder="First Name" id="firstName" name="firstName" value="{{ customer.first_name }}" required>
                          <label for="lastName">Last Name</label>
                          <input type="text" placeholder="Last Name" id="lastName" name="lastName" value="{{ customer.last_name }}" required>
                      </div>
          
                      <div>
                          <label for="email">Email</label>
                          <input type="email" placeholder="Email" id="email" name="email" value="{{ customer.email }}" disabled>
                          <div class="email-info">
                            <span>*EMAIL ADDRESS CAN NOT BE EDITED </span>
                            <div class="tooltip">
                                <img src="https://cdn.shopify.com/s/files/1/0556/0051/3212/files/info-no_bg.png?v=1742201672" height="10px" width="10px" class="details-icon-phone tooltip" style="vertical-align: top;">
                                <span class="tooltiptext"><i>Email address cannot be changed directly. Please contact customer service to request the change of email address. </i></span>
                            </div>
                          </div>
           </div>
                      <div id="phoneFieldContainer">
                          <label for="phone">Phone Number</label>
                          <input type="tel" placeholder="Phone" id="phone" name="phone" value="{{ customer.phone }}" {% if customer.phone %}disabled{% endif %}>
                          <input type="hidden" id="hidden-PhoneNew" name="address[phone]""  value="">
                           <div class="email-info">
                                <span>*PHONE NUMBER CAN NOT BE EDITED</span>
                                <div class="tooltip">
                                     <img src="https://cdn.shopify.com/s/files/1/0556/0051/3212/files/info-no_bg.png?v=1742201672" height="10px" width="10px" class="details-icon-phone tooltip" style="vertical-align: top;">
                                      <span class="tooltiptext"><i>Mobile number cannot be changed directly. Please contact customer service to request the change of mobile number. </i></span>
                                </div>
                           </div>
                      </div>
                      <p class="text-center">
                        <button type="button" class="text-link-1 link-accent-color address-edit-toggle-1" data-form-id="8235481825468">Cancel</button>
                        <button type="submit" class="save-contact button">Save</button>
                      </p>
                  </form>
          
                  <div id="responseMessage" style="margin-top: 10px;"></div>
              </div>
             
            </div>
          </div>
      </div>
      
      <script>
        document.addEventListener("DOMContentLoaded", function () {
          var inputPhone = document.querySelector("#phone");  // target the visible input
          var hiddenInputPhone = document.querySelector("#hidden-PhoneNew"); // target the hidden input
        
          var iti = window.intlTelInput(inputPhone, {
            initialCountry: "au",
            preferredCountries: ["np", "us", "gb", "in"],
            separateDialCode: true,
            utilsScript: "https://cdnjs.cloudflare.com/ajax/libs/intl-tel-input/17.0.19/js/utils.js"
          });

            // Handle edit button click
            document.querySelector('.edit-user-info').addEventListener('click', function () {
                document.querySelector('.customer-update-form').style.display = 'block';
                document.querySelector('.popup-overlay-contact').style.display = 'block';
                document.querySelector('.popup-container-contact').classList.remove('hide');
            });
        
            // Enable phone input if empty
            const phoneInput = document.getElementById('phone');
            if (!phoneInput.value) {
                phoneInput.removeAttribute('disabled');
            }
        
            // Form submission
            document.getElementById('customerUpdateForm').addEventListener('submit', async function (e) {
                e.preventDefault();
        
                const customerId = 'gid://shopify/Customer/{{ customer.id }}';
                const firstName = document.getElementById('firstName').value;
                const lastName = document.getElementById('lastName').value;
                const phone = document.getElementById('phone').value || null;
        
                // Only include phone in payload if it’s new or changed, and ensure it’s in E.164 format
                let formattedPhone = null;
                if (phone) {
                    // If phone already starts with "+", use it as-is; otherwise, assume a country code is needed
                    if (phone.startsWith('+')) {
                        formattedPhone = phone;
                    } else {
                        // Default to +977 for Nepal (adjust based on your use case)
                        formattedPhone = `+977 ${phone.replace(/\D/g, '')}`;
                    }
                }
        
                const payload = {
                    operationName: "CustomerUpdate",
                    variables: {
                        input: {
                            id: customerId,
                            firstName: firstName,
                            lastName: lastName,
                            ...(formattedPhone && { phone: formattedPhone })
                        }
                    },
                    query: `
                        mutation CustomerUpdate($input: CustomerInput!) {
                            customerUpdate(input: $input) {
                                customer {
                                    id
                                    firstName
                                    lastName
                                    email
                                    phone
                                }
                                userErrors {
                                    field
                                    message
                                }
                            }
                        }
                    `
                };
        
                try {
                    const response = await fetch('https://ezydog-member-profile-d6aad2c1d7ff.herokuapp.com/shopify/graphql', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            "X-API-Key": "1d956aa7d4081665e3c07131563c159f",
                        },
                        body: JSON.stringify(payload)
                    });
        
                    const result = await response.json();
        
                    if (!response.ok) {
                        throw new Error(`HTTP error! Status: ${response.status}`);
                    }
        
                    if (result.errors) {
                        document.getElementById('responseMessage').innerText = `GraphQL Error: ${result.errors[0].message}`;
                    } else if (result.data.customerUpdate.userErrors.length > 0) {
                        document.getElementById('responseMessage').innerText = `Error: ${result.data.customerUpdate.userErrors[0].message}`;
                    } else {
                        // Update the display
                        document.querySelector('.user-info-display p:nth-child(2)').innerText = `${firstName} ${lastName}`;
                        if (formattedPhone) {
                            document.querySelector('.user-info-display p:nth-child(6)').innerText = formattedPhone;
                        }
                    }
                } catch (error) {
                    console.error('Error updating customer:', error);
                    document.getElementById('responseMessage').innerText = 'An error occurred. Please try again later.';
                }
              });
          
        });
        
        $('.customer-update-form button[type="submit"]').click(function(){
          $('.customer-update-form').css('display', 'none');
          $('.popup-container-contact').addClass('hide'); //css('display', 'none');
        })

        $(document).on('click', '.text-link-1.address-edit-toggle-1', function(){
          $('.popup-container-contact').addClass('hide');
          $('.popup-overlay-contact').css('display','none');
          $('.customer-update-form').css('display', 'none');
        })
      </script>
      
  <style> 
    .email-info {
      display: flex;
      align-items: center;
      gap: 5px; 
    }
    
    .tooltip {
      position: relative;
      display: inline-block;
      cursor: pointer;
    }
    
    .tooltiptext {
      visibility: hidden;
      width: 200px;
      background-color: #333;
      color: #fff;
      text-align: center;
      padding: 5px;
      border-radius: 5px;
      position: absolute;
      z-index: 1;
      
      transform: translateX(-50%);
      opacity: 0;
      transition: opacity 0.3s;
    }
    
        
    .tooltip .tooltiptext::after {
      content: "";
      position: absolute;
      bottom: 100%;
      left: 50%;
      margin-left: -5px;
      border-width: 5px;
      border-style: solid;
      border-color: transparent transparent black transparent;
    }
    
    .tooltip:hover .tooltiptext {
      visibility: visible;
      opacity: 1;
    }

    input:disabled {
      background-color: #e9e9e9;
      color: #6c757d;
      cursor: not-allowed;
      border: 1px solid #f0f0f0;
    }
    .customer-address {
      border-radius: 5px;
    }
    .popup-container, .popup-container-new, .popup-container-contact {
      position: absolute;
      top: 0;
      bottom: 0;
      left: 0;
      right: 0;
    }
    
    .popup {
      width: 60%;
      background: #fff;
      position: fixed;
      left: calc(30% - 190px);
      top: calc(73% - 499px);
      z-index: 999999;
      padding: 0.75em 1.75em;
      border-radius: 10px;
    }
    .popup-update-contact {
      width: 43%;
      background: #fff;
      position: fixed;
      left: calc(40% - 254px);
      top: calc(73% - 433px);
      z-index: 999999;
      padding:  1.75em;
      border-radius: 10px;
    }
    .popup-new {
      width: 60%;
      background: #fff;
      position: fixed;
      left: calc(30% - 217px);
      top: calc(65% - 479px);
      z-index: 999999;
      padding: 0;
      border-radius: 10px;
    }
    
    .popup-overlay, .popup-overlay-new, .popup-overlay-contact {
      background: #00000082;
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      z-index: 1;
    }
    .popup-overlay {
      background: #00000012;
    }
    .form-vertical form {
      padding: 15px;
      margin-top: 20px;
    }
    .close, .close-edit {
      float: right;
      font-size: 2.5em;
      margin-top: 0px;
    }
    p.text-center {
      display: flex;
      justify-content: right;
      gap: 0.5em;
    }
    .btn:focus {
      background: #f0f0f0;
      color: #f01515;
    }
    .personal-details, .pets-info, .content-block {
      background: #f0f0f0;
      margin-bottom: 10px;
      padding: 2em;
      border-radius: 8px;
    }
    .btn{
      color: #f01515;
      background-color: #f0f0f0;
      font-size: 16px;
      letter-spacing: 0;
    }
    .btn:hover{
      background-color: #f0f0f0;
      color: rgb(189,34,27);
    }
    .personal-details label, .cust-addresss label {
      font-weight: 500;
      font-size: 15px;
      text-transform: none;
    }
    
    .personal-details p, .cust-addresss p {
      font-weight: 700;
      font-size: 15px;
    }
    @media only screen and (min-width: 750px) {
      .medium-up--two-thirds {
        width: 100%;
      }
      .medium-up--one-third {
        width: 33.33%;
      }
    }
    /*p {
      color: #454444;
    }*/
    span, label {
      color: #8d8d8d;
    }    
    .customer-address button {
      float: left; 
      padding: 0px;
    }
    #AddressNewForm {
      background: #f0f0f0;
    }
    
    #AddressNewForm form {
      padding: 0px;
      margin-top: 0px;
    }
    #customerUpdateForm label {
      display: none;
    }
    input {
      margin-bottom: 15px;
    }
    .customer-details {
      display: grid;
    }
    @media screen and (min-width: 768px){
      .customer-details {
        display: grid;
        grid-template-columns: repeat(4, 1fr);
        margin: 10px auto;
        gap: 2em;
      }
      .user-name {
        display: flex;
        gap: 1.25em;
      }
      .user-name input {
        width: 24%;
        margin-right: 22px;
      }
      input {
        width: 50%;
       }
    }
    @media screen and (max-width: 767px){
      .grid.grid--table {
        padding: 0;
      }
      .medium-up--two-thirds-header {
          width: 50%;
      }.small--one-quarter{
        width: 15%;
      }
      .site-header__shop-name--small {
        font-size: 18px;
      }
      .grid.grid--table {
        padding: 0;
      }
      .medium-up--two-thirds-header {
        width: 40%;
      }.small--one-quarter{
          width: 15%;
      }
      .site-header__shop-name--small {
        font-size: 18px;
      }
      .user-name {
        display: flex;
      }
      .user-name input {
        width: 36%;
        margin-right: 10px;
      }
      input {
        padding: 10px 12px;
        width: 100%;
      }
      .personal-details {
        padding: 1em 2em;
      }
      form#customerUpdateForm {
        display: inline-block;
      }
      .popup {
        width: 100%;
        left: 50%;
        top: 50%;
        transform: translate(-50%, -50%);
      }
     .customer-details {
        gap: 2em;
      }
      .popup-new {
        width: 100%;
        background: #fff;
        position: fixed;
        left: 50%;
        top: 50%;
        transform: translate(-50%, -50%);
        z-index: 999999;
        padding: 0;
        border-radius: 10px;
      }
      .grid__item.medium-up--one-half, .grid__item.medium-up--one-third {
        display: grid;
      }
      select {
        padding: 10px;
        background-color: #f4f4f4;
      }  
      form {
        display: grid;
      }
    }
    button.edit-user-info {
      border: 1px solid #f01515;
      background: #f01515;
      color: #fff;
      border-radius: 5px;
      padding: 8px 15px;
    }
    .form-vertical button[type="submit"], #AddressNewForm button[type="submit"] {
      float: right;
      color: #fff;
      background: #f01515;
      border: none;
      border-radius: 5px;
      padding: 4px 15px;
      text-transform: uppercase;
    }
    
    .cust-addresss {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 2em;
    }
    .cust-addresss p {
        font-size: 18px;
    }
    .btn.address-new-toggle {
        color: #fff;
        background-color: #f01515;
        letter-spacing: 0;
        border-radius: 5px;
        padding: 8px 15px;
        font-size: 14px;
        font-weight: 400;
        text-transform: capitalize;
    }
    @media screen and (min-width: 768px){
      .cust-addresss .btn.address-new-toggle {
          padding: 8px 15px;
          font-size: 14px;
          font-weight: 400;
          text-transform: capitalize;
        }
    }
    p.text-center button {
      text-transform: uppercase;
    }
    p.text-center button.address-delete {
      color: #fff;
      background: #000;
      border: 1px solid #000;
      border-radius: 5px;
      padding: 0;
      width: 18%; /*20%;*/
    }
    
    p.text-center .text-link.link-accent-color.address-edit-toggle,
    .text-center .address-new-toggle, 
    .text-link-1.address-edit-toggle-1 {
      color: #fff;
      background: #646466;
      border: 1px solid #646466;
      border-radius: 5px;
      padding: 0;
    }
    p.text-center button,
    p.text-center button,
    p.text-center input.text-link.link-accent-color,
    .text-center input.btn {
      width: 13%;
      min-width: 100px;
      height: 40px;
      margin-top: 10px;
      border-radius: 5px;
      padding: 0;
      text-align: center;
      font-size: 11px;
    }
    .text-center input.text-link.link-accent-color, 
    .text-center input.btn{
      border: 1px solid red;
      background: red;
      color: #fff;
    } 
    @media screen and (min-width: 768px) {
      .popup-update-contact .user-name input {
        width: 50%;
        margin-right: 0;
      }
      input {
        width: 100%;
        border-radius: 8px;
      }
      .popup.update-contact {
        left: calc(35% - 220px);
        top: calc(35% - 90px);
        padding: 2em;
      }
      button.text-link-1.link-accent-color.address-edit-toggle, .address-edit-toggle-1 {
        color: #fff;
        background: #646466;
        border: 1px solid #646466;
        border-radius: 5px;
        padding: 6px 5px;
      }
      .grid {
        list-style: none;
        padding: 0;
        margin: 0 0 0 -20px;
      }
      .grid:after {
        content: "";
        display: table;
        clear: both;
      }
      .grid__item {
        float: left;
        padding-left: 20px;
      }
      select {
        padding-top: 13px;
        padding-left: 15px;
        padding-bottom: 13px;
        background-color: #f4f4f4;
        color: #333;
        border: 0;
        max-width: 100%;
      }
      .medium-up--one-half {
        width: 50%;
      }
    }
    button.text-link.link-accent-color.address-edit-toggle {
      color: #f01515;
      margin-top: 10px;
      display: ruby;
    }
    
    .page-content-width label, .page-content-width span {
      color: #808285;
      font-weight: 600;
    }
    #customerUpdateForm span {
      font-weight: normal;
      font-size: 11px;    
      display: block; 
      margin-bottom: 15px;
    }
    
    #customerUpdateForm input#email,
    #customerUpdateForm input#phone{
      margin-bottom: 0;
    }
    @media screen and (max-width: 650px){
      .popup-update-contact {
        width: 100%;
        left: 0;
      }
        .user-name input {
            width: 50%;
            margin-right: 10px;
        }
      #customerUpdateForm input {
        width: 97%;
        border-radius: 5px
      }
      input:disabled {
        color: #8e9193;
      }
    }
    .save-contact {
      border: 1px solid red;
      background: red;
      color: #fff;
    }
    button {
      font-size: 14px;
      font-weight: 400;
    }
    .text-content p {
      font-size: 12px;
    }
    .hide {
      visibility: hidden;
    }
    input#address_default_address_new {
      width: 18px;
    }
    @media screen and (min-width: 1024px){
      .grid__item.medium-up--one-half {
        width: 50%;
      }
      .grid__item {
        width: 100%;
      }
      #AddressNewForm {
        padding: 2em 4em;
      }
      input {
        padding: 10px 13px;
      }
      
      .grid__item.grid__item.medium-up--one-third {
        width: 33.33%;
      }
    }
    @media screen and (min-width: 768px) and (max-width: 1023px){
      .popup-new {
        width: 80%;
        top: calc(57% - 478px);
        left: calc(38% - 217px);
      }
      .grid__item.medium-up--one-half {
        width: 50%;
      }
      .grid__item {
        width: 100%;
      }
      #AddressNewForm {
        padding: 2em 4em;
      }
      input {
        padding: 10px 13px;
      }
      
      .grid__item.grid__item.medium-up--one-third {
        width: 33.33%;
      }
    }
    @media screen and (min-width: 1024px) and (max-width: 1366px){
      .popup-new {
        width: 80%;
        top: calc(50% - 479px);
        left: calc(31% - 217px);
      }
      .grid__item.medium-up--one-half {
        width: 50%;
      }
      .grid__item {
        width: 100%;
      }
      #AddressNewForm {
        padding: 2em 4em;
      }
      input {
        padding: 10px 13px;
      }
      .grid__item.grid__item.medium-up--one-third {
        width: 33.33%;
      }
    }
    @media screen and (max-width: 767px){
      .popup-new {
          height: 90vh;
          overflow-y: auto;
      }
      .grid__item.grid__item.medium-up--one-third select {
          padding: 13px 10px;
          margin-bottom: 10px;
      }
    }
    @media screen and (min-width: 768px){
      img.header__logo-image {
          width: 29%;
      }
      
      .grid.grid--table {
          display: flex;
      }
      
      .grid__item.small--one-quarter.medium-up--hide {
          width: 14%;
      }
    }
  </style>      
        
      {% comment %}
        Add address form, hidden by default
      {% endcomment %}
      <div class="popup-container-new hide" bis_skin_checked="1">
        <div class="popup-overlay-new" bis_skin_checked="1"></div>
        <div class="popup-new" bis_skin_checked="1">
          <div id="AddressNewForm" class="hide content-block form-vertical">
            <!-- <a href="javascript:void(0)" class="close">×</a> -->
            {% form 'customer_address', customer.new_address %}
              <h4 class="h4">Add a New Address</h2>
    
              <div class="grid">
    
                <div class="grid__item medium-up--one-half">
                  <label for="AddressFirstNameNew">{{ 'customer.addresses.first_name' | t }}</label>
                  <input type="text" id="AddressFirstNameNew" name="address[first_name]" value="{{ form.first_name }}">
                </div>
    
                <div class="grid__item medium-up--one-half">
                  <label for="AddressLastNameNew">{{ 'customer.addresses.last_name' | t }}</label>
                  <input type="text" id="AddressLastNameNew" name="address[last_name]" value="{{ form.last_name }}">
                </div>
    
              </div>
    
              <div class="grid">
    
                <div class="grid__item">
                  <label for="AddressCompanyNew">{{ 'customer.addresses.company' | t }}</label>
                  <input type="text" id="AddressCompanyNew" name="address[company]" value="{{ form.company }}">
    
                  <label for="AddressAddress1New">{{ 'customer.addresses.address1' | t | remove: '1' }}</label>
                  <input type="text" id="AddressAddress1New" name="address[address1]" value="{{ form.address1 }}">
                 </div>
    
              </div>
    
              <div class="grid">
    
                <div class="grid__item medium-up--one-third">
                  <label for="AddressCityNew">{{ 'customer.addresses.city' | t }}</label>
                  <input type="text" id="AddressCityNew" name="address[city]" value="{{ form.city }}">
                </div>
    
                <div class="grid__item grid__item medium-up--one-third">
                  <!-- medium-up--one-half -->
                  <label for="AddressCountryNew">{{ 'customer.addresses.country' | t }}</label>
                  <select id="AddressCountryNew" name="address[country]" data-default="{{ form.country }}">{{ all_country_option_tags }}</select>
                </div>
    
                <div class="grid__item medium-up--one-third" id="AddressProvinceContainerNew" style="display:none">
                  <label for="AddressProvinceNew">{{ 'customer.addresses.province' | t }}</label>
                  <select id="AddressProvinceNew" name="address[province]" data-default="{{ form.province }}"></select>
                </div>
              </div>
               <div class="grid">
                <div class="grid__item medium-up--one-third">
                  <label for="AddressZipNew">{{ 'customer.addresses.zip' | t }}</label>
                  <input type="text" id="AddressZipNew" name="address[zip]" value="{{ form.zip }}" autocapitalize="characters">
                </div>
    
                <div class="grid__item medium-up--one-half">
                  <label for="AddressMobileNew">Mobile Number</label>
                  <input type="text" id="AddressMobileNew" class="AddressMobileNew" name="address[phone]" value="">
                  <input type="hidden" id="hidden-AddressPhoneNew" name="address[phone]"  value="">
                </div>
              </div>
              
              <p style="display: inline;">
                {{ form.set_as_default_checkbox }}
                <label for="address_default_address_new">{{ 'customer.addresses.set_default' | t }}</label>
              </p>
    
              <p class="text-center">
                <button type="button" class="text-link link-accent-color address-new-toggle">Cancel</button>
                <input type="submit" class="btn" value="{{ 'customer.addresses.save_address' | t | upcase }}">
                <!-- {%- assign save_button = 'customer.addresses.save_address' | t -%}
                {%- render 'button', type: 'submit', content: save_button -%} -->
              </p>
    
            {% endform %}
          </div>
        </div>
      </div>
      
      <div class="content-block">
        <div class="cust-addresss" bis_skin_checked="1">  
          <p>
            <b>Addresses</b></p>
            <button type="button" class="btn address-new-toggle">+ ADD ADDRESS</button>
        </div>

        {% comment %}
          List all customer addresses with a unique edit form.
          Also add pagination in case they have a large number of addresses
        {% endcomment %}
      
        <div class="customer-details">
          {% assign default_address_shown = false %}
          
          <!-- First show the default address if it exists -->
          {% for address in customer.addresses %}
            {% if address == customer.default_address %}
              <div class="customer-address" data-address-id="{{ address.id }}">
                <div class="customer-address-billing">
                  <p>
                    <span style="text-transform: uppercase; font-weight: 400; font-size: 12px;">Default Address</span>
                  </p>
                  {{ address | format_address }}
                  <p>{% if address.phone != blank %}{{ address.phone }}{% endif %}</p>
                  <p>{% if address.mobileno != blank %}{{ address.mobileno }}{% endif %}</p>
                </div>
                
                <button type="button" class="text-link link-accent-color address-edit-toggle" data-form-id="{{ address.id }}">
                  <svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" width="15" height="15" viewBox="0 0 24 24" style="fill:#FA5252;">
                    <path d="M 18.414062 2 C 18.158062 2 17.902031 2.0979687 17.707031 2.2929688 L 15.707031 4.2929688 L 14.292969 5.7070312 L 3 17 L 3 21 L 7 21 L 21.707031 6.2929688 C 22.098031 5.9019687 22.098031 5.2689063 21.707031 4.8789062 L 19.121094 2.2929688 C 18.926094 2.0979687 18.670063 2 18.414062 2 z M 18.414062 4.4140625 L 19.585938 5.5859375 L 18.292969 6.8789062 L 17.121094 5.7070312 L 18.414062 4.4140625 z M 15.707031 7.1210938 L 16.878906 8.2929688 L 6.171875 19 L 5 19 L 5 17.828125 L 15.707031 7.1210938 z"></path>
                  </svg>
                  Edit Address
                </button>
                
                <!-- Popup container for the default address -->
                <div class="popup-container hide" id="popup-container-{{ address.id }}">
                  <div class="popup-overlay"></div>
                  <div class="popup" id="popup-{{ address.id }}"> 
                    <div id="EditAddress_{{ address.id }}" class="form-vertical">
                      {% form 'customer_address', address %}
                        <h4>{{ 'customer.addresses.edit_address' | t }}</h4>
                        <div class="grid">
                          <div class="grid__item medium-up--one-half">
                            <label for="AddressFirstName_{{ address.id }}">{{ 'customer.addresses.first_name' | t }}</label>
                            <input type="text" id="AddressFirstName_{{ address.id }}" name="address[first_name]" value="{{ form.first_name }}">
                          </div>
                
                          <div class="grid__item medium-up--one-half">
                            <label for="AddressLastName_{{ address.id }}">{{ 'customer.addresses.last_name' | t }}</label>
                            <input type="text" id="AddressLastName_{{ address.id }}" name="address[last_name]" value="{{ form.last_name }}">
                          </div>
                        </div>
                
                        <label for="AddressCompany_{{ address.id }}">{{ 'customer.addresses.company' | t }}</label>
                        <input type="text" id="AddressCompany_{{ address.id }}" name="address[company]" value="{{ form.company }}">
                
                        <label for="AddressAddress1_{{ address.id }}">{{ 'customer.addresses.address1' | t | remove: '1' }}</label>
                        <input type="text" id="AddressAddress1_{{ address.id }}" name="address[address1]" value="{{ form.address1 }}">
                
                        <div class="grid">
                          <div class="grid__item medium-up--one-third">
                            <label for="AddressCity_{{ address.id }}">Suburb</label>
                            <input type="text" id="AddressCity_{{ address.id }}" name="address[city]" value="{{ form.city }}">
                          </div>
                
                          <div class="grid__item medium-up--one-third">
                            <label for="AddressCountry_{{ address.id }}">{{ 'customer.addresses.country' | t }}</label>
                            <select id="AddressCountry_{{ address.id }}" class="address-country-option" data-form-id="{{ address.id }}" name="address[country]" data-default="{{ form.country }}">{{ all_country_option_tags }}</select>
                          </div>
        
                          <div id="AddressProvinceContainer_{{ address.id }}" class="grid__item medium-up--one-third" style="display:none">
                            <label for="AddressProvince_{{ address.id }}">{{ 'customer.addresses.province' | t }}</label>
                            <select id="AddressProvince_{{ address.id }}" name="address[province]" data-default="{{ form.province }}"></select>
                          </div>
                        </div>
                
                        <div class="grid">
                          <div class="grid__item medium-up--one-third">
                            <label for="AddressZip_{{ address.id }}">{{ 'customer.addresses.zip' | t }}</label>
                            <input type="text" id="AddressZip_{{ address.id }}" name="address[zip]" value="{{ form.zip }}" autocapitalize="characters">
                          </div>
                
                          <div class="grid__item medium-up--one-half">
                            <label for="AddressMobileNew_{{ address.id }}">Mobile Number</label>
                            <input type="text" id="AddressMobileNew_{{ address.id }}" class="AddressMobileNewedit" name="attributes[Phone]" value="{{ form.phone }}">
                            <input type="hidden" id="hidden-AddressPhoneNewedit_{{ address.id }}" name="address[phone]" value="{{ form.phone }}">
                          </div>
                        </div>
                
                        <p class="text-center">
                          <button type="button" class="text-link link-accent-color address-delete" data-address-url="{{ address.url }}" data-confirm-message="{{ 'customer.addresses.delete_confirm' | t }}">{{ 'customer.addresses.delete' | t | append: ' address'}}</button>
                          <button type="button" class="text-link link-accent-color address-edit-toggle" data-form-id="{{ address.id }}">Cancel</button>
                          <input type="submit" class="text-link link-accent-color btn" value="SAVE">
                        </p>
                      {% endform %}
                    </div>
                  </div>
                </div>
              </div>
              {% assign default_address_shown = true %}
            {% endif %}
          {% endfor %}
          
          <!-- Then show all other addresses except the default one -->
          {% for address in customer.addresses %}
            {% unless address == customer.default_address %}
              <div class="customer-address" data-address-id="{{ address.id }}">
                <div class="customer-address-shipping">
                  {{ address | format_address }}
                  <p>{% if address.phone != blank %}{{ address.phone }}{% endif %}</p>
                  <p>{% if address.mobileno != blank %}{{ address.mobileno }}{% endif %}</p>
                </div>
                
                <button type="button" class="text-link link-accent-color address-edit-toggle" data-form-id="{{ address.id }}">
                  <svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" width="15" height="15" viewBox="0 0 24 24" style="fill:#FA5252;">
                    <path d="M 18.414062 2 C 18.158062 2 17.902031 2.0979687 17.707031 2.2929688 L 15.707031 4.2929688 L 14.292969 5.7070312 L 3 17 L 3 21 L 7 21 L 21.707031 6.2929688 C 22.098031 5.9019687 22.098031 5.2689063 21.707031 4.8789062 L 19.121094 2.2929688 C 18.926094 2.0979687 18.670063 2 18.414062 2 z M 18.414062 4.4140625 L 19.585938 5.5859375 L 18.292969 6.8789062 L 17.121094 5.7070312 L 18.414062 4.4140625 z M 15.707031 7.1210938 L 16.878906 8.2929688 L 6.171875 19 L 5 19 L 5 17.828125 L 15.707031 7.1210938 z"></path>
                  </svg>
                  Edit Address
                </button>
                
                <div class="popup-container hide" id="popup-container-{{ address.id }}">
                  <div class="popup-overlay"></div>
                  <div class="popup" id="popup-{{ address.id }}"> 
                    <div id="EditAddress_{{ address.id }}" class="form-vertical">
                      {% form 'customer_address', address %}
                        <h4>{{ 'customer.addresses.edit_address' | t }}</h4>
                        <div class="grid">
                          <div class="grid__item medium-up--one-half">
                            <label for="AddressFirstName_{{ address.id }}">{{ 'customer.addresses.first_name' | t }}</label>
                            <input type="text" id="AddressFirstName_{{ address.id }}" name="address[first_name]" value="{{ form.first_name }}">
                          </div>
                
                          <div class="grid__item medium-up--one-half">
                            <label for="AddressLastName_{{ address.id }}">{{ 'customer.addresses.last_name' | t }}</label>
                            <input type="text" id="AddressLastName_{{ address.id }}" name="address[last_name]" value="{{ form.last_name }}">
                          </div>
                        </div>
                
                        <label for="AddressCompany_{{ address.id }}">{{ 'customer.addresses.company' | t }}</label>
                        <input type="text" id="AddressCompany_{{ address.id }}" name="address[company]" value="{{ form.company }}">
                
                        <label for="AddressAddress1_{{ address.id }}">{{ 'customer.addresses.address1' | t | remove: '1' }}</label>
                        <input type="text" id="AddressAddress1_{{ address.id }}" name="address[address1]" value="{{ form.address1 }}">
                
                        <div class="grid">
                          <div class="grid__item medium-up--one-third">
                            <label for="AddressCity_{{ address.id }}">Suburb</label>
                            <input type="text" id="AddressCity_{{ address.id }}" name="address[city]" value="{{ form.city }}">
                          </div>
                
                          <div class="grid__item medium-up--one-third">
                            <label for="AddressCountry_{{ address.id }}">{{ 'customer.addresses.country' | t }}</label>
                            <select id="AddressCountry_{{ address.id }}" class="address-country-option" data-form-id="{{ address.id }}" name="address[country]" data-default="{{ form.country }}">{{ all_country_option_tags }}</select>
                          </div>
        
                          <div id="AddressProvinceContainer_{{ address.id }}" class="grid__item medium-up--one-third" style="display:none">
                            <label for="AddressProvince_{{ address.id }}">{{ 'customer.addresses.province' | t }}</label>
                            <select id="AddressProvince_{{ address.id }}" name="address[province]" data-default="{{ form.province }}"></select>
                          </div>
                        </div>
                
                        <div class="grid">
                          <div class="grid__item medium-up--one-third">
                            <label for="AddressZip_{{ address.id }}">{{ 'customer.addresses.zip' | t }}</label>
                            <input type="text" id="AddressZip_{{ address.id }}" name="address[zip]" value="{{ form.zip }}" autocapitalize="characters">
                          </div>
                
                          <div class="grid__item medium-up--one-half">
                            <label for="AddressMobileNew_{{ address.id }}">Mobile Number</label>
                            <input type="text" id="AddressMobileNew_{{ address.id }}" class="AddressMobileNewedit" name="attributes[Phone]" value="{{ form.phone }}">
                            <input type="hidden" id="hidden-AddressPhoneNewedit_{{ address.id }}" name="address[phone]" value="{{ form.phone }}">
                          </div>
                        </div>
                
                        <p class="text-center">
                          <button type="button" class="text-link link-accent-color address-delete" data-address-url="{{ address.url }}" data-confirm-message="{{ 'customer.addresses.delete_confirm' | t }}">{{ 'customer.addresses.delete' | t | append: ' address'}}</button>
                          <button type="button" class="text-link link-accent-color address-edit-toggle" data-form-id="{{ address.id }}">Cancel</button>
                          <input type="submit" class="text-link link-accent-color btn" value="SAVE">
                        </p>
                      {% endform %}
                    </div>
                  </div>
                </div>
              </div>
            {% endunless %}
          {% endfor %}
        </div>  
      </div>
      
      <script>
        $(document).ready(function() {
          $(document).on('click', '.address-edit-toggle', function() {
              const formId = $(this).data('form-id');
              
              $('.popup-container').addClass('hide');
              $('.form-vertical').addClass('hide');
              
              $(`#popup-container-${formId}`).removeClass('hide');
              $(`#EditAddress_${formId}`).removeClass('hide');
          });
        
          // Handle cancel button clicks
          $(document).on('click', '.text-center .text-link.link-accent-color.address-edit-toggle[data-form-id]', function() {
              const formId = $(this).data('form-id');
              $(`#popup-container-${formId}`).addClass('hide');
              $(`#EditAddress_${formId}`).addClass('hide');
          });
        
          // Handle close button clicks (if you have a close button)
          $(document).on('click', '.close', function() {
              $(this).closest('.popup-container').addClass('hide');
              $(this).closest('.form-vertical').addClass('hide');
          });
        
          // Handle delete button clicks
          $(document).on('click', '.address-delete', function(e) {
              e.preventDefault();
              const $button = $(this); // Store the button element
              const url = $button.data('address-url');
              const confirmMessage = $button.data('confirm-message');
              const $addressDiv = $button.closest('.customer-address');
              const addressId = $addressDiv.data('address-id');
        
              if (confirm(confirmMessage)) {
                  // Disable button and show loader
                  $button.prop('disabled', true);
                  $button.html(
                      '<svg class="spinner" viewBox="0 0 24 24" width="16" height="16" style="display:inline-block; vertical-align:middle;"><circle cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4" fill="none" stroke-dasharray="31.4159" stroke-dashoffset="0"><animate attributeName="stroke-dashoffset" from="0" to="31.4159" dur="1s" repeatCount="indefinite"/></circle></svg> Deleting...'
                  );
        
                  // Get CSRF token from Shopify meta tag (if available)
                  const csrfToken = $('meta[name="csrf-token"]').attr('content') || '';
        
                  $.ajax({
                      url: url,
                      type: 'POST',
                      data: {
                          _method: 'DELETE',
                          authenticity_token: csrfToken
                      },
                      headers: {
                          'X-Requested-With': 'XMLHttpRequest',
                          'Content-Type': 'application/x-www-form-urlencoded'
                      },
                      success: function(response) {
                          console.log('Delete successful:', response);
                          // Remove the deleted address div from the DOM
                          $addressDiv.remove();
                          $('.popup-container-new').addClass('hide');
                          // Optionally, update a count or message if needed
                          if ($('.customer-address').length === 0) {
                              $('.cust-addresss').after('<p>No addresses available.</p>');
                          }
                      },
                      error: function(xhr, status, error) {
                          console.error('Delete error:', status, error, xhr.responseText);
                          alert('Error deleting address: ' + (xhr.responseText || 'Unknown error. Check console for details.'));
                      },
                      complete: function() {
                          // Re-enable button and restore original text
                          $button.prop('disabled', false);
                          $button.html(
                              '<svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" width="15" height="15" viewBox="0 0 24 24" style="fill:#FA5252; vertical-align:middle;">' +
                              '<path d="M 18.414062 2 C 18.158062 2 17.902031 2.0979687 17.707031 2.2929688 L 15.707031 4.2929688 L 14.292969 5.7070312 L 3 17 L 3 21 L 7 21 L 21.707031 6.2929688 C 22.098031 5.9019687 22.098031 5.2689063 21.707031 4.8789062 L 19.121094 2.2929688 C 18.926094 2.0979687 18.670063 2 18.414062 2 z M 18.414062 4.4140625 L 19.585938 5.5859375 L 18.292969 6.8789062 L 17.121094 5.7070312 L 18.414062 4.4140625 z M 15.707031 7.1210938 L 16.878906 8.2929688 L 6.171875 19 L 5 19 L 5 17.828125 L 15.707031 7.1210938 z"></path>' +
                              '</svg> Edit Address'
                          );
                      }
                  });
              }
          });
        
          // Handle new address toggle
          $(document).on('click', '.address-new-toggle', function() {
              $('.popup-container-new').removeClass('hide');
              $('.popup-overlay-new').css('display', 'block');
              $('#AddressNewForm').removeClass('hide');
          });
        
          // Close new address form
          $(document).on('click', '.text-link.link-accent-color.address-new-toggle', function() {
              $('.popup-container-new').addClass('hide');
              $('.popup-overlay-new').css('display', 'none');
              $('#AddressNewForm').addClass('hide');
          });
        });
      </script>

    </div>
  </div>
</div>

<script> 
  document.addEventListener("DOMContentLoaded", function() {    
    var input = document.querySelector("#AddressMobileNew");  // target the visible input
    var hiddenInput = document.querySelector("#hidden-AddressPhoneNew"); // target the hidden input
  
    var iti = window.intlTelInput(input, {
      initialCountry: "au",
      preferredCountries: ["np", "us", "gb", "in"],
      separateDialCode: true,
      utilsScript: "https://cdnjs.cloudflare.com/ajax/libs/intl-tel-input/17.0.19/js/utils.js"
    });
  
      
    // Allow only numbers and optional leading +
    input.addEventListener("input", function(e) {
      // Replace anything that's not a number or + (only at the start)
      input.value = input.value.replace(/(?!^\+-)[^\d]/g, '');
    });
  
    // When input changes or loses focus — update hidden input with full international number
    input.addEventListener("blur", function() {
      var fullNumber = iti.getNumber();
      hiddenInput.value = fullNumber; 
    });
  });

   document.addEventListener("DOMContentLoaded", function() {
    var inputs = document.querySelectorAll(".AddressMobileNewedit");
    var phoneinputshiddenedit = document.querySelector(".hiddenphoneedit");
    
    inputs.forEach(function(input) {
      input.addEventListener("input", function(e) {
        // Replace anything that's not a number or + (only at the start)
        input.value = input.value.replace(/(?!^\+)[^\d]/g, '');
      });
      var hiddenInputId = input.getAttribute("data-hidden-target");
      var hiddenInput = document.querySelector("#" + hiddenInputId);
    var hiddenInputs = document.querySelector("#hidden-AddressPhoneNewedit");
      var iti = window.intlTelInput(input, {
        initialCountry: "au",
        preferredCountries: ["np", "us", "gb", "in"],
        separateDialCode: true,
        utilsScript: "https://cdnjs.cloudflare.com/ajax/libs/intl-tel-input/17.0.19/js/utils.js"
      });
  
      input.addEventListener("blur", function() {
        var fullNumber = iti.getNumber();
        hiddenInputs.value = fullNumber;
      });
    });
  });
</script>

<style>
  .iti--separate-dial-code{width:100%}
</style>

{% schema %}
{
  "name": "t:sections.main_customers_addresses.name",
  "class": "shopify-section--main-customers-addresses",
  "tag": "section"
}
{% endschema %}